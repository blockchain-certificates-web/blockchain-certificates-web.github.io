import{H as t,I as r}from"./main.js";async function o(o){if(!o.proof)return void console.warn("No proof found in the issuer profile.");let e=o.proof.type;"DataIntegrityProof"===e&&(e=t(o.proof.cryptosuite));const a=await async function(t){if(t===r.MerkleProof2019){const{default:t}=await import("./MerkleProof2019-B4HSvmJo-Cwc-hu-Y.js");return t}if(t===r.Ed25519Signature2020){const{default:t}=await import("./Ed25519Signature2020-B-CFC9WC-DJkVVmwk.js");return t}if(t===r.EcdsaSecp256k1Signature2019){const{default:t}=await import("./EcdsaSecp256k1Signature2019-Cy1mIkjt-DJmj4ZAc.js");return t}if(t===r.EcdsaSd2023){const{default:t}=await import("./EcdsaSd2023-DcsELLJj-DreWzXlX.js");return t}}(e),i=new a({document:o,proof:o.proof,issuer:o.issuer?o.issuer:o,executeStep:async(t,r,o)=>r()});await i.init();try{await i.verifyProof()}catch(t){throw new Error(`Issuer profile verification failed: ${t.message}`)}}export{o as default};
