import{H as r,I as t}from"./main.js";async function o(o){if(!o.proof)return void console.warn("No proof found in the issuer profile.");let e=o.proof.type;"DataIntegrityProof"===e&&(e=r(o.proof.cryptosuite));const a=await async function(r){if(r===t.MerkleProof2019){const{default:r}=await import("./MerkleProof2019-BLrywo8h-Bo9rH2Eq.js");return r}if(r===t.Ed25519Signature2020){const{default:r}=await import("./Ed25519Signature2020-BQsESRnS-TKZI_1AX.js");return r}if(r===t.EcdsaSecp256k1Signature2019){const{default:r}=await import("./EcdsaSecp256k1Signature2019-BHgoxmKI-DT2qHZod.js");return r}if(r===t.EcdsaSd2023){const{default:r}=await import("./EcdsaSd2023-B0XPAIp6-K61axvBA.js");return r}}(e),i=new a({document:o,proof:o.proof,issuer:o.issuer?o.issuer:o,executeStep:async(r,t,o)=>t()});await i.init();try{await i.verifyProof()}catch(r){throw new Error(`Issuer profile verification failed: ${r.message}`)}}export{o as default};
